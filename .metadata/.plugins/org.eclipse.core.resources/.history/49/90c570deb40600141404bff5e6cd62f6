// section 5 #1

import java.io.*;
import acm.program.*;

public class sec5 extends ConsoleProgram {
	
	// file to be read
	private static final String FILE = "lear.txt";
	
	// 1. word count
	public void run() {
		//make window larger
		setSize(800,600);
		// print greeting
		println("Section 5 #1 : Read text from file and count lines,words,chars");
		// print what file is read
		println("File is: " + FILE);
		// make reader object
		BufferedReader rd = readFile(FILE);
		// count and display totals
		displayCounter(rd);
	}
	
	// open the file
	private BufferedReader readFile(String filename) {
		// initialize variable beforehand so it can return null if it fails
		BufferedReader rd = null;
		// error handling try catch block 
		try {
			// create reader object
			rd = new BufferedReader(new FileReader(filename));
		}
		catch (FileNotFoundException e ) {
			// print error
			println("reading file error");
		}
		// return reader or its initial null value
		return rd;
	}
	
	// function to count lines,words,chars and display them
	private void displayCounter(BufferedReader rd) {
		// initialize all variables
		int lines = 0;
		int words = 0;
		int chars = 0;
		// try catch block for reading each line
		try {
			// while the next line isnt null, read line and count
			while (true) {
				String line = rd.readLine();
				if (line == null) break;
				lines++;
				// call respective counter functions
				words += wordCount(line);
				chars += charCount(line);
			}
		}
		catch (Exception e) {
			// print error
			println("Reading line error");
		}
		// print everything
		println("lines: " + lines);
		println("words: " + words);
		println("chars: " + chars);
	}
	
	private int wordCount(String line) {
		int words = 1;
		for (int i = 0; i<line.length(); i ++ ) {
			if ( ' ' == line.charAt(i)) {
				words++;
			}
		}
		
		return words;
	}
	
	// count number of characters by using the built-in string function length
	private int charCount(String line) {
		return line.length();
	}
	
	
}
