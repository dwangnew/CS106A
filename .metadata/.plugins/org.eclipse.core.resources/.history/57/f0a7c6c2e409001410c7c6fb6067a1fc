
// section 8

import acm.program.*;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.*;

public class sec8 extends ConsoleProgram {
	
	//
	public void run() {
		// greeting
		println("Welcome to your travel agent. Please select starting city");
		// init db as hashmap from file
		createRoutes();
		// prints list of starting cities by iterating over hashmap's keys
		Iterator iterator = routes.keySet().iterator();
		while (iterator.hasNext()) {
			println(iterator.next());
		}
		// get initial starting city
		String startingCity = readLine("Pick a city from the list above to go to");
		// main loop:
		while (true) {
			println("You are current at " + startingCity);
			if (startingCity.equals("")) break;
			showRoutes(startingCity);
			startingCity = readLine("Pick a city from the list above to go to");
		}
	}
	
	// reads file and fills in the routes hashmap
	private void createRoutes() {
		// open file using try/catch block
		BufferedReader rd = null;
		try {
			rd = new BufferedReader(new FileReader("routes.txt"));
		}
		catch (Exception e) {
			//
			println("error opening file");
		}
		// read lines using try catch block
		try {
			while (true) {
				String fullLine = rd.readLine();
				if (fullLine == null) break;
				for (int i = 0 ; i < 2 ; i ++ ) {
					String line = rd.readLine();
					if (line == null) break;
					fullLine = fullLine + line;
				}
				
				//debug
				println(fullLine);
				
				// passed line to function that reads each line
				createRoute(fullLine);
			}
		}
		catch (Exception e) {
			//
			println("error reading line");
		}
	}
	
	// fills in one entry into hashmap routes using a line from the file
	private void createRoute(String line) {
		int startingCityEndIndex = line.indexOf("-") ;
		int endCityStartingIndex = line.indexOf(">") + 2 ;
		String startingCity = line.substring(0, startingCityEndIndex);
		String endingCity = line.substring(endCityStartingIndex);
		if (routes.containsKey(startingCity)) {
			routes.get(startingCity).add(endingCity);
		}
		else {
			ArrayList<String> destinations = new ArrayList<String>();
			destinations.add(endingCity);
			routes.put(startingCity, destinations);
		}
		// deb
		println("created a route");
		
	}
	
	private void showRoutes(String city) {
		if (routes.get(city) != null) {
			Iterator iterator = routes.get(city).iterator();
			while (iterator.hasNext()) {
				println(iterator.next());
			}
		}
	}
	
	//
	private HashMap<String,ArrayList<String>> routes;
}
