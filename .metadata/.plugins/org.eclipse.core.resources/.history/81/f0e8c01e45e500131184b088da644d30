/*
 * File: Breakout.java
 * -------------------
 * Name:
 * Section Leader:
 * 
 * This file will eventually implement the game of Breakout.
 */

import acm.graphics.*;
import acm.program.*;
import acm.util.*;

import java.applet.*;
import java.awt.*;
import java.awt.event.*;

public class Breakout extends GraphicsProgram {

/** Width and height of application window in pixels */
	public static final int APPLICATION_WIDTH = 400;
	public static final int APPLICATION_HEIGHT = 600;

/** Dimensions of game board (usually the same) */
	private static final int WIDTH = APPLICATION_WIDTH;
	private static final int HEIGHT = APPLICATION_HEIGHT;

/** Dimensions of the paddle */
	private static final int PADDLE_WIDTH = 60;
	private static final int PADDLE_HEIGHT = 10;

/** Offset of the paddle up from the bottom */
	private static final int PADDLE_Y_OFFSET = 30;

/** Number of bricks per row */
	private static final int NBRICKS_PER_ROW = 10;

/** Number of rows of bricks */
	private static final int NBRICK_ROWS = 10;

/** Separation between bricks */
	private static final int BRICK_SEP = 4;

/** Width of a brick */
	private static final int BRICK_WIDTH =
	  (WIDTH - (NBRICKS_PER_ROW - 1) * BRICK_SEP) / NBRICKS_PER_ROW;

/** Height of a brick */
	private static final int BRICK_HEIGHT = 8;

/** Radius of the ball in pixels */
	private static final int BALL_RADIUS = 10;

/** Offset of the top brick row from the top */
	private static final int BRICK_Y_OFFSET = 70;

/** Number of turns */
	private static final int NTURNS = 3;

	private static final Color[] COLORS = {Color.RED,Color.ORANGE,Color.YELLOW,Color.GREEN,Color.CYAN};
	
/* Method: run() */
/** Runs the Breakout program. */
	public void run() {
		setUpScreen();
		//play();
	}

	private void setUpScreen() {
		setSize(APPLICATION_WIDTH, APPLICATION_HEIGHT);
		addBricks();
	}
	
	private void addBricks() {
		Color color = COLORS[0];
		for (int i = 0 ; i < NBRICK_ROWS ; i++ ) {
			int y = BRICK_Y_OFFSET + i*BRICK_HEIGHT + i*BRICK_SEP;
			Color color = 
			addRow(y, color);
		}
	}
	
	private void addRow(double y, Color color) {
		for (int i = 0 ; i < NBRICKS_PER_ROW ; i++ ) {
			int x = i*BRICK_WIDTH + i*BRICK_SEP;
			GRect brick = new GRect(x,y,BRICK_WIDTH,BRICK_HEIGHT);
			brick.setColor(arg0)
		}
	}
	
}
